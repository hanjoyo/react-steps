{
  "version": 3,
  "sources": ["../src/Stepper/Stepper.tsx", "../src/hooks/useWindowSize.tsx", "../src/Stepper/Step.tsx", "../src/Stepper/Connector.tsx", "../src/Stepper/Lock.tsx"],
  "sourcesContent": ["import React, { cloneElement, ReactElement } from \"react\";\nimport \"./index.css\";\nimport { Size, useWindowSize } from \"../hooks/useWindowSize\";\nexport { Step } from \"./Step\";\n\nexport interface StepperProps {\n  children: ReactElement[];\n  curStep: number;\n  setCurStep: (index: number) => void;\n  className?: string;\n  activeColor?: string;\n  inActiveColor?: string;\n  borderColor?: string;\n  stepSize?: number;\n  progressBarActiveColor?: string;\n  progressBarBackgroundColor?: string;\n  smallScreenShowProgressbar?: boolean;\n  style?: React.CSSProperties;\n}\n\nexport const Stepper: React.FC<StepperProps> = ({\n  children,\n  curStep,\n  setCurStep,\n  activeColor,\n  inActiveColor,\n  borderColor,\n  stepSize,\n  progressBarActiveColor,\n  progressBarBackgroundColor,\n  smallScreenShowProgressbar,\n  className,\n  style,\n}) => {\n  const elements: any = [];\n  const isFirst = curStep == 0;\n  const isLast = curStep == children.length - 1;\n  const windowSize: Size = useWindowSize();\n\n  const isSmallScreen = windowSize.width! < children.length * stepSize! + 80;\n  let counter = 0;\n\n  children.forEach((child, i) => {\n    let isShowStep = true;\n    if (isSmallScreen) {\n      isShowStep = curStep == i || curStep == i - 1 || curStep == i + 1;\n      if (isFirst) {\n        isShowStep = i == 0 || i == 1 || i == 2;\n      } else if (isLast) {\n        isShowStep =\n          i == children.length - 3 ||\n          i == children.length - 2 ||\n          i == children.length - 1;\n      }\n    }\n\n    if (isShowStep) {\n      counter++;\n      const el = cloneElement(child, {\n        isLastActive: i <= curStep - 1,\n        isActive: i <= curStep,\n        setCurStep: setCurStep,\n        activeColor: activeColor,\n        inActiveColor: inActiveColor,\n        borderColor: borderColor,\n        stepSize: stepSize,\n        key: i,\n        index: i,\n        isLast: isSmallScreen ? counter === 3 : i === children.length - 1,\n      });\n      elements.push(el);\n    }\n  });\n\n  return (\n    <>\n      {isSmallScreen && smallScreenShowProgressbar && (\n        <div\n          className=\"relative \"\n          style={{ backgroundColor: progressBarBackgroundColor }}\n        >\n          <div\n            style={{\n              width: `${(curStep / (children.length - 1)) * 100}%`,\n              backgroundColor: progressBarActiveColor,\n            }}\n            className=\" h-2 mb-4 transition-width  duration-700 ease-in-out\"\n          ></div>\n        </div>\n      )}\n\n      <ul\n        style={style}\n        className={`flex flex-row justify-between mx-3 ${className}`}\n      >\n        {elements}\n      </ul>\n    </>\n  );\n};\n\nStepper.defaultProps = {\n  borderColor: \"#8fb3db\",\n  activeColor: \"#0b294b\",\n  smallScreenShowProgressbar: true,\n  progressBarActiveColor: \"green\",\n  progressBarBackgroundColor: \"lightgray\",\n  inActiveColor: \"#D1D5DB\",\n  stepSize: 60,\n  className: \"\",\n  style: {},\n};\n", "// Source: https://usehooks.com/useWindowSize/\nimport { useState, useEffect } from \"react\";\n// Define general type for useWindowSize hook, which includes width and height\nexport interface Size {\n  width: number | undefined;\n  height: number | undefined;\n}\n// Hook\nexport function useWindowSize(): Size {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<Size>({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n\nexport default useWindowSize;\n", "import React from \"react\";\nimport Connector from \"./Connector\";\nimport Lock from \"./Lock\";\nexport interface StepProps {\n  isLast?: boolean;\n  className?: string;\n  index?: number;\n  isActive?: boolean;\n  activeColor?: string;\n  inActiveColor?: string;\n  setCurStep?: (index: number) => void;\n  locked?: boolean;\n  isLastActive?: boolean;\n  borderColor?: string;\n  label?: string;\n  stepSize?: number;\n}\n\nexport const Step: React.FC<StepProps> = ({\n  isLast,\n  className,\n  children,\n  index,\n  isActive,\n  activeColor,\n  inActiveColor,\n  setCurStep,\n  locked,\n  isLastActive,\n  borderColor,\n  label,\n  stepSize,\n}) => {\n  const stepOnClick = (index: number) => {\n    if (setCurStep) {\n      setCurStep(index);\n    }\n  };\n  return (\n    <>\n      <div>\n        <li\n          onClick={() => {\n            if (!locked) {\n              stepOnClick(index || 0);\n            }\n          }}\n          className={`rounded-full border-8  \n          flex items-center justify-center transition duration-300\n          relative \n          text-white \n          ${locked ? \"cursor-not-allowed\" : \"cursor-pointer\"} ${className}`}\n          style={{\n            width: stepSize,\n            height: stepSize,\n            backgroundColor: isActive ? activeColor : inActiveColor,\n            borderColor: isActive ? borderColor : inActiveColor,\n          }}\n        >\n          <>\n            {locked && <Lock />}\n            {!locked && (children ? children : index)}\n          </>\n        </li>\n        <div className=\"relative h-6\">\n          <p className=\"absolute left-1/2 -translate-x-1/2  whitespace-nowrap\">\n            {label}\n          </p>\n        </div>\n      </div>\n\n      {!isLast && (\n        <Connector\n          height={stepSize || 0}\n          isActive={isLastActive || false}\n          activeColor={borderColor || \"\"}\n          inActiveColor={inActiveColor || \"\"}\n        />\n      )}\n    </>\n  );\n};\n\nStep.defaultProps = {\n  isLast: false,\n  className: \"\",\n  isActive: false,\n  locked: false,\n  isLastActive: false,\n  setCurStep: () => {},\n  label: \"\",\n  index: 0,\n  stepSize: 60,\n};\n", "import React from \"react\";\n\ninterface ConnectorProps {\n  isActive: boolean;\n  activeColor: string;\n  inActiveColor: string;\n  height: number;\n}\n\nconst Connector: React.FC<ConnectorProps> = ({\n  isActive,\n  activeColor,\n  inActiveColor,\n  height,\n}) => {\n  return (\n    <div\n      className=\"flex w-full justify-start items-center relative\"\n      style={{ height: height }}\n    >\n      <div\n        className={`absolute border-t-8  w-full z-0`}\n        style={{ borderColor: inActiveColor }}\n      ></div>\n      <div\n        className={`border-t-8  bg-red-400 transition-width  duration-700 ease-in-out z-50 ${\n          isActive ? \"w-full\" : \"w-0\"\n        }`}\n        style={{ borderColor: activeColor }}\n      ></div>\n    </div>\n  );\n};\n\nexport default Connector;\n", "import React from \"react\";\n\nconst Lock: React.FC<{}> = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"16\"\n      height=\"16\"\n      fill=\"currentColor\"\n      className=\"bi bi-lock-fill\"\n      viewBox=\"0 0 16 16\"\n    >\n      <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\" />\n    </svg>\n  );\n};\nexport default Lock;\n"],
  "mappings": "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",
  "names": []
}
